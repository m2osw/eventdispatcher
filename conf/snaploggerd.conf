# Snap! Logger Daemon
#
# Setup the Snap! Logger Daemon (the service, not the appenders)

# listen=<ip-address>:<port>
#
# The IP address and port of the controller listener.
#
# The snaplogger daemon has two TCP connections. One is reserved for LOG
# messages and it is optional (see `server_tcp`). The other is the control
# connection which is used to tweak the server while it is running.
#
# This connection is not optional. It has to exist.
#
# IMPORTANT: this port also supports a `LOG` message; this one, though, is
# the one used to reset the logger output files within the Snap! Logger
# when the files were rotated by a tool such as logrotate.
#
# Default: 127.0.0.1:4050
listen=127.0.0.1:4050


# server_tcp=<ip-address>:<port>
#
# The IP address and port to listen on with a TCP connection. The parameter
# is used to listen to LOG messages which clients send to the server.
#
# By default this parameter is not set meaning that you do not want a TCP
# connection to listen on LOG messages. Note that there is another TCP
# connection (the listen=... parameter) which also accepts messages, but
# not the LOG messages. That other connection is used to control the daemon
# by sending messages such as QUIT to make it exit cleanly.
#
# Default: <empty>
#server_tcp=


# server_udp=<ip-address>:<port>
#
# The IP address and port to listen on with a UDP connection. The parameter
# is used to listen to LOG messages which clients send to the server.
#
# By default this parameter is not set meaning that you do not want to receive
# LOG messages over UDP. Note that there is another UDP connection (the
# `udp_listen` parameter). That other connection is used to send control
# messages, including support for a `LOG` message used to reset the output
# files after rotation by a tool such as logrotate.
#
# Default: <empty>
#server_udp=


# udp_listen=<ip-address>:<port>
#
# A UDP-based control port of the snaplogger daemon.
#
# This port is used for similar reason as the `listen=...` port. It is
# particularly useful to send a UDP message to reset the logger files
# after rotation. Although it can be done with the TCP connection
# (defined by `listen=...`) it's not practical to just send a message
# and forget about it. Over the TCP connection, the daemon sends a reply
# which we have to listen for.
#
# Default: 127.0.0.1:4051
udp_listen=127.0.0.1:4051


